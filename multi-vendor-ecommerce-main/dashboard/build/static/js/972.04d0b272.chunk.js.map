{"version":3,"file":"static/js/972.04d0b272.chunk.js","mappings":"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","sources":["views/seller/SellerToCustomer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { IoMdClose } from 'react-icons/io'\nimport { FaList } from 'react-icons/fa'\nimport toast from 'react-hot-toast'\nimport { useParams, Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { get_customers, messageClear, get_customer_message, send_message, updateMessage } from '../../store/Reducers/chatReducer'\nimport { socket } from '../../utils/utils'\nimport { BsEmojiSmile } from 'react-icons/bs'\n\nconst SellerToCustomer = () => {\n\n    const scrollRef = useRef()\n    const { userInfo } = useSelector(state => state.auth)\n    const { customers, currentCustomer, messages, successMessage, activeCustomer } = useSelector(state => state.chat)\n    const [receverMessage, setReceverMessage] = useState('')\n    const dispatch = useDispatch()\n    const [text, setText] = useState('')\n    const { customerId } = useParams()\n\n    const [show, setShow] = useState(false)\n\n    useEffect(() => {\n        dispatch(get_customers(userInfo._id))\n    }, [])\n    useEffect(() => {\n        if (customerId) {\n            dispatch(get_customer_message(customerId))\n        }\n    }, [customerId])\n\n    const send = (e) => {\n        e.preventDefault()\n        dispatch(send_message({\n            senderId: userInfo._id,\n            receverId: customerId,\n            text,\n            name: userInfo?.shopInfo?.shopName\n        }))\n        setText('')\n    }\n\n    useEffect(() => {\n        if (successMessage) {\n            socket.emit('send_seller_message', messages[messages.length - 1])\n            dispatch(messageClear())\n        }\n    }, [successMessage])\n\n\n    useEffect(() => {\n        socket.on('customer_message', msg => {\n            setReceverMessage(msg)\n        })\n        // socket.on('activeSeller', (sellers) => {\n        //     setActiveSeller(sellers)\n        // })\n    }, [])\n\n    useEffect(() => {\n\n        if (receverMessage) {\n            if (customerId === receverMessage.senderId && userInfo._id === receverMessage.receverId) {\n                dispatch(updateMessage(receverMessage))\n            }\n            else {\n                toast.success(receverMessage.senderName + \" \" + \"send a message\")\n                dispatch(messageClear())\n            }\n        }\n    }, [receverMessage])\n    useEffect(() => {\n        scrollRef.current?.scrollIntoView({ behavior: 'smooth' })\n    }, [messages])\n    return (\n        <div className='px-2 lg:px-7 py-5'>\n            <div className='w-full bg-[#283046] px-4 py-4 rounded-md h-[calc(100vh-140px)]'>\n                <div className='flex w-full h-full relative'>\n                    <div className={`w-[280px] h-full absolute z-10 ${show ? '-left-[16px]' : '-left-[336px]'} md:left-0 md:relative transition-all`}>\n                        <div className='w-full h-[calc(100vh-177px)] bg-[#252b3b] md:bg-transparent overflow-y-auto'>\n                            <div className='flex text-xl justify-between items-center p-4 md:p-0 md:px-3 md:pb-3 text-white'>\n                                <h2>Customers</h2>\n                                <span onClick={() => setShow(!show)} className='block cursor-pointer md:hidden'><IoMdClose /></span>\n                            </div>\n                            {\n                                customers.map((c, i) => <Link key={i} to={`/seller/dashboard/chat-customer/${c.fdId}`} className={`h-[60px] flex justify-start gap-2 items-center text-white px-2 py-2 rounded-sm cursor-pointer bg-slate-700`}>\n                                    <div className='relative'>\n                                        <img className='w-[38px] h-[38px] border-white border-2 max-w-[38px] p-[2px] rounded-full' src=\"http://localhost:3001/images/admin.jpg\" alt=\"\" />\n                                        {\n                                            activeCustomer.some((a => a.customerId === c.fdId)) && <div className='w-[10px] h-[10px] bg-green-500 rounded-full absolute right-0 bottom-0'></div>\n                                        }\n                                    </div>\n                                    <div className='flex justify-center items-start flex-col w-full'>\n                                        <div className='flex justify-between items-center w-full'>\n                                            <h2 className='text-base font-semibold'>{c.name}</h2>\n                                        </div>\n                                    </div>\n                                </Link>)\n                            }\n                        </div>\n                    </div>\n                    <div className='w-full md:w-[calc(100%-200px)] md:pl-4'>\n                        <div className='flex justify-between items-center'>\n                            {\n                                customerId && <div className='flex justify-start items-center gap-3'>\n                                    <div className='relative'>\n                                        <img className='w-[42px] h-[42px] border-green-500 border-2 max-w-[42px] p-[2px] rounded-full' src=\"http://localhost:3001/images/admin.jpg\" alt=\"\" />\n                                        {\n                                            activeCustomer.some((a => a.customerId === currentCustomer._id)) && <div className='w-[10px] h-[10px] bg-green-500 rounded-full absolute right-0 bottom-0'></div>\n                                        }\n                                    </div>\n                                    <h2 className='text-base text-white font-semibold'>{currentCustomer.name}</h2>\n                                </div>\n                            }\n                            <div onClick={() => setShow(!show)} className='w-[35px] flex md:hidden h-[35px] rounded-sm bg-blue-500 shadow-lg hover:shadow-blue-500/50 justify-center cursor-pointer items-center text-white'>\n                                <span><FaList /></span>\n                            </div>\n                        </div>\n                        <div className='py-4'>\n                            <div className='bg-slate-800 h-[calc(100vh-290px)] rounded-md p-3 overflow-y-auto'>\n                                {\n                                    customerId ? messages.map((m, i) => {\n                                        if (m.senderId === customerId) {\n                                            return (\n                                                <div ref={scrollRef} key={i} className='w-full flex justify-start items-center'>\n                                                    <div className='flex justify-start items-start gap-2 md:px-3 py-2 max-w-full lg:max-w-[85%]'>\n                                                        <div>\n                                                            <img className='w-[38px] h-[38px] border-2 border-white rounded-full max-w-[38px] p-[3px]' src=\"http://localhost:3001/images/admin.jpg\" alt=\"\" />\n                                                        </div>\n                                                        <div className='flex justify-center items-start flex-col w-full bg-orange-500 shadow-lg shadow-orange-500/50 text-white py-1 px-2 rounded-sm'>\n                                                            <span>{m.message}</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            )\n                                        } else {\n                                            return (\n                                                <div ref={scrollRef} key={i} className='w-full flex justify-end items-center'>\n                                                    <div className='flex justify-start items-start gap-2 md:px-3 py-2 max-w-full lg:max-w-[85%]'>\n                                                        <div className='flex justify-center items-start flex-col w-full bg-blue-500 shadow-lg shadow-blue-500/50 text-white py-1 px-2 rounded-sm'>\n                                                            <span>{m.message}</span>\n                                                        </div>\n                                                        <div>\n                                                            <img className='w-[38px] h-[38px] border-2 border-white rounded-full max-w-[38px] p-[3px]' src=\"http://localhost:3001/images/admin.jpg\" alt=\"\" />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            )\n                                        }\n                                    }) : <div className='w-full h-full flex justify-center items-center flex-col gap-2 text-white'>\n                                        <span><BsEmojiSmile /></span>\n                                        <span>Select Customer</span>\n                                    </div>\n                                }\n\n                            </div>\n                        </div>\n                        <form onSubmit={send} className='flex gap-3'>\n                            <input readOnly={customerId ? false : true} onChange={(e) => setText(e.target.value)} value={text} className='w-full flex justify-between px-2 border border-slate-700 items-center py-[5px] focus:border-blue-500 rounded-md outline-none bg-transparent text-[#d0d2d6]' type=\"text\" placeholder='input your message' />\n                            <button disabled={customerId ? false : true} className='shadow-lg bg-cyan-500 hover:shadow-cyan-500/50 text-semibold w-[75px] h-[35px] rounded-md text-white flex justify-center items-center'>Send</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SellerToCustomer"],"names":["scrollRef","useRef","userInfo","useSelector","state","auth","_useSelector2","chat","customers","currentCustomer","messages","successMessage","activeCustomer","_useState","useState","_useState2","_slicedToArray","receverMessage","setReceverMessage","dispatch","useDispatch","_useState3","_useState4","text","setText","customerId","useParams","_useState5","_useState6","show","setShow","useEffect","get_customers","_id","get_customer_message","socket","length","messageClear","msg","senderId","receverId","updateMessage","toast","senderName","_scrollRef$current","current","scrollIntoView","behavior","_jsx","className","children","_jsxs","concat","onClick","IoMdClose","map","c","i","Link","to","fdId","src","alt","some","a","name","FaList","m","ref","message","BsEmojiSmile","onSubmit","e","_userInfo$shopInfo","preventDefault","send_message","shopInfo","shopName","readOnly","onChange","target","value","type","placeholder","disabled"],"sourceRoot":""}