{"version":3,"file":"static/js/139.00430e59.chunk.js","mappings":"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","sources":["views/seller/SellerToAdmin.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport { send_message_seller_admin, messageClear, get_seller_message, updateAdminMessage } from '../../store/Reducers/chatReducer'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { socket } from '../../utils/utils'\nimport adminImage from '../../assets/admin.jpg'\nimport sellerImage from '../../assets/seller.png'\n\nconst SellerToAdmin = () => {\n\n    const scrollRef = useRef()\n\n    const [text, setText] = useState('')\n    const dispatch = useDispatch()\n    const { seller_admin_message, successMessage, activeAdmin } = useSelector(state => state.chat)\n    const { userInfo } = useSelector(state => state.auth)\n    useEffect(() => {\n        dispatch(get_seller_message())\n    }, [])\n    const send = (e) => {\n        e.preventDefault()\n        dispatch(send_message_seller_admin({\n            senderId: userInfo._id,\n            receverId: '',\n            message: text,\n            senderName: userInfo.name\n        }))\n        setText('')\n    }\n\n    useEffect(() => {\n        socket.on('receved_admin_message', msg => {\n            dispatch(updateAdminMessage(msg))\n        })\n    }, [])\n\n    useEffect(() => {\n        if (successMessage) {\n            socket.emit('send_message_seller_to_admin', seller_admin_message[seller_admin_message.length - 1])\n            dispatch(messageClear())\n        }\n    }, [successMessage])\n\n    useEffect(() => {\n        scrollRef.current?.scrollIntoView({ behavior: 'smooth' })\n    }, [seller_admin_message])\n\n    return (\n        <div className='px-2 lg:px-7 py-5'>\n            <div className='w-full bg-[#283046] px-4 py-4 rounded-md h-[calc(100vh-140px)]'>\n                <div className='flex w-full h-full relative'>\n\n                    <div className='w-full md:pl-4'>\n                        <div className='flex justify-between items-center'>\n                            <div className='flex justify-start items-center gap-3'>\n                                <div className='relative'>\n                                    <img className='w-[42px] h-[42px] border-green-500 border-2 max-w-[42px] p-[2px] rounded-full' src={adminImage} alt=\"\" />\n                                    {\n                                        activeAdmin && <div className='w-[10px] h-[10px] bg-green-500 rounded-full absolute right-0 bottom-0'></div>\n                                    }\n\n                                </div>\n                                <h2 className='text-base text-white font-semibold'>Support</h2>\n                            </div>\n                        </div>\n                        <div className='py-4'>\n                            <div className='bg-slate-800 h-[calc(100vh-290px)] rounded-md p-3 overflow-y-auto'>\n                                {\n                                    seller_admin_message.map((m, i) => {\n                                        if (userInfo._id !== m.senderId) {\n                                            return (\n                                                <div ref={scrollRef} key={i} className='w-full flex justify-start items-center'>\n                                                    <div className='flex justify-start items-start gap-2 md:px-3 py-2 max-w-full lg:max-w-[85%]'>\n                                                        <div>\n                                                            <img className='w-[38px] h-[38px] border-2 border-white rounded-full max-w-[38px] p-[3px]' src={adminImage} alt=\"image\" />\n                                                        </div>\n                                                        <div className='flex justify-center items-start flex-col w-full bg-orange-500 shadow-lg shadow-orange-500/50 text-white py-1 px-2 rounded-sm'>\n                                                            <span>{m.message}</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            )\n                                        } else {\n                                            return (\n                                                <div ref={scrollRef} key={i} className='w-full flex justify-end items-center'>\n                                                    <div className='flex justify-start items-start gap-2 md:px-3 py-2 max-w-full lg:max-w-[85%]'>\n                                                        <div className='flex justify-center items-start flex-col w-full bg-blue-500 shadow-lg shadow-blue-500/50 text-white py-1 px-2 rounded-sm'>\n                                                            <span>{m.message}</span>\n                                                        </div>\n                                                        <div>\n                                                            <img className='w-[38px] h-[38px] border-2 border-white rounded-full max-w-[38px] p-[3px]' src={userInfo.image ? userInfo.image : sellerImage} alt=\"\" />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            )\n                                        }\n                                    })\n                                }\n                            </div>\n                        </div>\n                        <form onSubmit={send} className='flex gap-3'>\n                            <input required value={text} onChange={(e) => setText(e.target.value)} className='w-full flex justify-between px-2 border border-slate-700 items-center py-[5px] focus:border-blue-500 rounded-md outline-none bg-transparent text-[#d0d2d6]' type=\"text\" placeholder='input your message' />\n                            <button className='shadow-lg bg-cyan-500 hover:shadow-cyan-500/50 text-semibold w-[75px] h-[35px] rounded-md text-white flex justify-center items-center'>Send</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SellerToAdmin"],"names":["scrollRef","useRef","_useState","useState","_useState2","_slicedToArray","text","setText","dispatch","useDispatch","_useSelector","useSelector","state","chat","seller_admin_message","successMessage","activeAdmin","userInfo","auth","useEffect","get_seller_message","socket","msg","updateAdminMessage","length","messageClear","_scrollRef$current","current","scrollIntoView","behavior","_jsx","className","children","_jsxs","src","adminImage","alt","map","m","i","_id","senderId","ref","message","image","sellerImage","onSubmit","e","preventDefault","send_message_seller_admin","receverId","senderName","name","required","value","onChange","target","type","placeholder"],"sourceRoot":""}